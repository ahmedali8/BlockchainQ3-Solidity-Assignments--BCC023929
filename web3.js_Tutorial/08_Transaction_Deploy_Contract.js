var Tx = require('ethereumjs-tx').Transaction;
const Web3 = require('web3');
const web3 = new Web3('https://ropsten.infura.io/v3/e9595b79cb2d4128b8e2457fd0932edd');


const account2 = '0x09E78Ec232C168ec6ef420675F813C4719A811f8';
const privateKey2 = '3D84D21DD7B6AC5F0B3BFEB35BB05ACB4F70F7B462AAB72B531F6D78B090486E';
const privateKey2Buffer = Buffer.from(privateKey2, 'hex');

web3.eth.getTransactionCount(account2, (err, txCount) => {
    const data = "0x608060405234801561001057600080fd5b5061019b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063303b519214610046578063967e6e65146100c9578063d5dcf127146100e7575b600080fd5b61004e610115565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561008e578082015181840152602081019050610073565b50505050905090810190601f1680156100bb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100d1610152565b6040518082815260200191505060405180910390f35b610113600480360360208110156100fd57600080fd5b810190808035906020019092919050505061015b565b005b60606040518060400160405280601781526020017f446f20736f6d6520776f726b2066726f6d2048756d616e000000000000000000815250905090565b60008054905090565b806000819055505056fea26469706673582212205d7ee37f1a10c02c7120e3617d19be52eaf9c01a0864a834f3a021b3987b97b364736f6c63430006060033"
    let txObject = {
        nonce: web3.utils.toHex(txCount),
        gasLimit: web3.utils.toHex(800000),
        gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')),
        data: data
    }

    const tx = new Tx(txObject, { chain: 'ropsten', hardfork: 'petersburg' });
    tx.sign(privateKey2Buffer);

    const serializedTx = tx.serialize();
    const raw = '0x' + serializedTx.toString('hex');

    web3.eth.sendSignedTransaction(raw, (err, txHash) => {
        console.log('txHash = ', txHash);
    });
});